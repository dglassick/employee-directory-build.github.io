{"version":3,"sources":["components/CardHolder/CardHolder.js","components/Choices/Choices.js","components/Search/Search.js","components/Wrapper/Wrapper.js","utils/API.js","components/EmployeeCard/EmployeeCard.js","pages/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["CardHolder","props","className","children","Choices","onChange","value","SearchBar","handleInputChange","type","placeholder","icon","Wrapper","query","axios","get","EmployeeCard","alt","src","thumbnail","name","location","email","phone","onClick","setEmployee","image","department","faker","commerce","finance","amount","title","jobTitle","handleOpen","Main","useState","allEmployees","setAllEmployees","filtered","setFiltered","search","setSearch","stateFilter","setStateFilter","view","setView","fireEmployee","setFireEmployee","employee","handleClose","useEffect","API","then","response","console","log","data","employeeData","results","map","user","id","length","first","last","picture","large","state","cell","catch","err","Search","event","employeeSearch","target","filter","toLowerCase","includes","employeeState","number","key","Modal","aria-labelledby","centered","show","onHide","Header","closeButton","Title","Body","Container","Row","Col","md","Footer","role","style","opacity","Button","fired","setTimeout","handleFireEmployee","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.6fa7b04f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst CardHolder = (props) => {\r\n\r\n    return (\r\n        <div className=\"ui four cards\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardHolder;\r\n","import React from \"react\";\r\n\r\nconst Choices = (props) => {\r\n    return (\r\n        <select className=\"ui search dropdown\" onChange={props.onChange} value ={props.value}>\r\n            <option value=\"none\">Choose a State:</option>\r\n            <option value=\"Alabama\">Alabama</option>\r\n            <option value=\"Alaska\">Alaska</option>\r\n            <option value=\"Arizona\">Arizona</option>\r\n            <option value=\"Arkansas\">Arkansas</option>\r\n            <option value=\"California\">California</option>\r\n            <option value=\"Colorado\">Colorado</option>\r\n            <option value=\"Connecticut\">Connecticut</option>\r\n            <option value=\"Delaware\">Delaware</option>\r\n            <option value=\"Florida\">Florida</option>\r\n            <option value=\"Georgia\">Georgia</option>\r\n            <option value=\"Hawaii\">Hawaii</option>\r\n            <option value=\"Idaho\">Idaho</option>\r\n            <option value=\"Illinois\">Illinois</option>\r\n            <option value=\"Indiana\">Indiana</option>\r\n            <option value=\"Iowa\">Iowa</option>\r\n            <option value=\"Kansas\">Kansas</option>\r\n            <option value=\"Kentucky\">Kentucky</option>\r\n            <option value=\"Louisiana\">Louisiana</option>\r\n            <option value=\"Maine\">Maine</option>\r\n            <option value=\"Maryland\">Maryland</option>\r\n            <option value=\"Massachusetts\">Massachusetts</option>\r\n            <option value=\"Michigan\">Michigan</option>\r\n            <option value=\"Minnesota\">Minnesota</option>\r\n            <option value=\"Mississippi\">Mississippi</option>\r\n            <option value=\"Missouri\">Missouri</option>\r\n            <option value=\"Montana\">Montana</option>\r\n            <option value=\"Nebraska\">Nebraska</option>\r\n            <option value=\"Nevada\">Nevada</option>\r\n            <option value=\"New Hampshire\">New Hampshire</option>\r\n            <option value=\"New Jersey\">New Jersey</option>\r\n            <option value=\"New Mexico\">New Mexico</option>\r\n            <option value=\"New York\">New York</option>\r\n            <option value=\"North Carolina\">North Carolina</option>\r\n            <option value=\"North Dakota\">North Dakota</option>\r\n            <option value=\"Ohio\">Ohio</option>\r\n            <option value=\"Oklahoma\">Oklahoma</option>\r\n            <option value=\"Oregon\">Oregon</option>\r\n            <option value=\"Pennsylvania\">Pennsylvania</option>\r\n            <option value=\"Rhode Island\">Rhode Island</option>\r\n            <option value=\"South Carolina\">South Carolina</option>\r\n            <option value=\"South Dakota\">South Dakota</option>\r\n            <option value=\"Tennessee\">Tennessee</option>\r\n            <option value=\"Texas\">Texas</option>\r\n            <option value=\"Utah\">Utah</option>\r\n            <option value=\"Vermont\">Vermont</option>\r\n            <option value=\"Virginia\">Virginia</option>\r\n            <option value=\"Washington\">Washington</option>\r\n            <option value=\"West Virginia\">West Virginia</option>\r\n            <option value=\"Wisconsin\">Wisconsin</option>\r\n            <option value=\"Wyoming\">Wyoming</option>\r\n            \r\n        </select>\r\n    )\r\n}\r\n\r\nexport default Choices;","import React from \"react\";\r\n\r\nconst SearchBar = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <input \r\n            value = {props.value}\r\n            onChange={props.handleInputChange}\r\n            type=\"text\"\r\n            placeholder=\"Search for Employee...\"\r\n            />\r\n            <i className={`${props.icon} icon`}></i>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import React from \"react\";\r\n\r\nfunction Wrapper (props) {\r\n    return(\r\n        <div className=\"wrapper\">{props.children}</div>\r\n    )\r\n}\r\n\r\nexport default Wrapper;","import axios from 'axios';\r\n\r\nexport default {\r\n  randomEmployees: function (query) {\r\n    return axios.get('https://randomuser.me/api/?results=100&nat=us');\r\n  }\r\n};\r\n","import React from 'react';\r\nimport faker from 'faker';\r\n\r\nconst EmployeeCard = props => {\r\n  return (\r\n    <div className='teal card'>\r\n      <div className='content'>\r\n        <img\r\n          alt='employee'\r\n          className='right floated mini ui image'\r\n          src={props.thumbnail}\r\n        />\r\n        <div className='header'>{props.name}</div>\r\n        <div>\r\n          <span>{props.location}</span>\r\n        </div>\r\n\r\n        <div>\r\n          <span>\r\n            <i className='icon-envelope'></i> {props.email}\r\n          </span>\r\n\r\n          <br></br>\r\n\r\n          <span>\r\n            <i className='phone icon'></i> {props.phone}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='ui inverted grey segment'>\r\n        <button\r\n          className='ui inverted primary button'\r\n          onClick={() => {\r\n            props.setEmployee({\r\n              name: props.name,\r\n              location: props.location,\r\n              image: props.image,\r\n              email: props.email,\r\n              phone: props.phone,\r\n              department: faker.commerce.department(),\r\n              finance: faker.finance.amount(),\r\n              title: faker.name.jobTitle()\r\n            });\r\n            props.handleOpen();\r\n          }}\r\n        >\r\n          Employee Info\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeCard;\r\n","import React, {useState, useEffect} from \"react\";\r\nimport CardHolder from \"../../components/CardHolder/CardHolder\";\r\nimport Choices from \"../../components/Choices/Choices\";\r\nimport Search from \"../../components/Search/Search\";\r\nimport Wrapper from \"../../components/Wrapper/Wrapper\";\r\nimport API from \"../../utils/API\";\r\nimport EmployeeCard from \"../../components/EmployeeCard/EmployeeCard\";\r\nimport SearchBar from \"../../components/Search/Search\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\n\r\n\r\nconst Main = () => {\r\n\r\n    const [allEmployees, setAllEmployees] = useState([])\r\n    const [filtered, setFiltered] = useState([]);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [stateFilter, setStateFilter] = useState('none');\r\n    const [view, setView] = useState(false);\r\n    const [fireEmployee, setFireEmployee] = useState(false);\r\n    const [employee, setEmployee] = useState({\r\n        name: \"Example\",\r\n        image: \"\",\r\n        location: \"California\",\r\n        email: \"example@example.com\",\r\n        phone: \"555-555-5555\",\r\n        department: \"Example Department\"\r\n    });\r\n\r\n    const handleClose = () => {\r\n        setFireEmployee(false);\r\n        setView(false)\r\n    }\r\n    const handleOpen = () => setView (true)\r\n\r\n    const handleFireEmployee = (email) =>{\r\n        const fired = allEmployees.filter(employee=> employee.email !== email);\r\n        setFiltered(fired);\r\n        setFireEmployee(true);\r\n        setTimeout(() => {\r\n            handleClose()\r\n        }, 2000);\r\n    }\r\n\r\n    useEffect(() => {\r\n        API.randomEmployees()\r\n        .then(response => {\r\n            console.log(response.data)\r\n            const employeeData = response.data.results.map(\r\n                user => {\r\n                    return( {\r\n                        id: user.length,\r\n                        name: `${user.name.first} ${user.name.last}`,\r\n                        image: user.picture.large,\r\n                        email: user.email,\r\n                        location: user.location.state,\r\n                        thumbnail: user.picture.thumbnail,\r\n                        phone: user.cell\r\n                    })\r\n                })\r\n                setFiltered(employeeData);\r\n                setAllEmployees(employeeData)\r\n        })\r\n        .catch( err => console.log(err))\r\n    }, [])\r\n\r\n    const handleFilter = (event) => {\r\n        const employeeState = event.target.value\r\n        \r\n        if(employeeState !== \"none\"){\r\n            const number = allEmployees.filter(user => user.location === employeeState)\r\n            setFiltered(number)\r\n        }else{\r\n            setFiltered(allEmployees)\r\n        }\r\n        setStateFilter(employeeState)\r\n    }\r\n\r\n    const handleInputChange= (event) =>{\r\n\r\n        var employeeSearch = event.target.value;\r\n\r\n        setFiltered(allEmployees.filter(user => user.name.toLowerCase().includes(employeeSearch.toLowerCase())))\r\n        setSearch(employeeSearch);\r\n        employeeSearch = \"\";\r\n\r\n\r\n    }\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"banner\">\r\n                <br>\r\n                </br>\r\n                <Wrapper>\r\n                    <h1>Employee Directory</h1>\r\n                    <SearchBar\r\n                    value={search}\r\n                    handleInputChange={handleInputChange}\r\n                    icon={'users'}\r\n                    />\r\n                </Wrapper>\r\n            </div>\r\n            <div>\r\n                <div className=\"row\">\r\n                    <h2>Filter Employees by State</h2>\r\n                    <Choices\r\n                    value={stateFilter}\r\n                    onChange = {handleFilter}\r\n                    />\r\n                </div>\r\n                {/* divider here */}\r\n                <br></br>\r\n            </div>\r\n            <CardHolder>\r\n            {filtered.map(employee => (\r\n                <EmployeeCard\r\n                key = {employee.email}\r\n                name = {employee.name}\r\n                phone = {employee.phone}\r\n                image = {employee.image}\r\n                thumbnail= {employee.thumbnail}\r\n                location = {employee.location}\r\n                email = {employee.email}\r\n                handleOpen = {handleOpen}\r\n                setEmployee = {setEmployee}\r\n                />\r\n            ))}\r\n\r\n                <Modal aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered show={view} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                       <Modal.Title className=\"ui\">{employee.name}</Modal.Title> \r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Container>\r\n                            <Row>\r\n                                <Col md={4}>\r\n                                    <span><img src={employee.image} alt={employee.name}/></span>\r\n                                </Col>\r\n                                <Col md={8}>\r\n                                    <h6>Location: {employee.location}</h6>\r\n                                    <h6>Cell Phone: {employee.phone}</h6>\r\n                                    <h6>Email: {employee.email}</h6>\r\n                                    <h6>Department: {employee.department}</h6>\r\n                                    <h6>Salary: {employee.finance}</h6>\r\n                                    <h6>Job Title: {employee.title}</h6>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Container>\r\n                            <div className=\"alert alert-danger\" role=\"alert\" style ={{opacity: fireEmployee ? 1 : 0}}>\r\n                                You're fired!\r\n                            </div>\r\n                        </Container>\r\n                        <Button className=\"ui inverted green button\" onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n                        <Button className=\"ui inverted red button\" onClick={() => {\r\n                            handleFireEmployee(employee.email)\r\n                        }}>\r\n                            Fire Employee\r\n                        </Button>\r\n                    </Modal.Footer>\r\n\r\n                </Modal>\r\n\r\n          </CardHolder>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Main;","import React from 'react';\n\nimport './App.css';\nimport Main from \"./pages/Main/Main\"\n\nfunction App() {\n  return (\n    <div className=\"container\">\n\n      <Main/>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}